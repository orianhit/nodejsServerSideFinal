#!/usr/bin/env node

// Orian Dabod 308337062
// Lital Kraft 314806647

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('hitserversidefinalproject:server');
var http = require('http');
const usersModel = require('../model/users');

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

// Define an async function that is called when the server starts listening.
async function onListening() {

  // Get the server's address.
  const addr = server.address();

  // Convert the address to a string.
  const bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port;

  // Log the address to the console.
  debug('Listening on ' + bind);

  // Find the user with the ID 123123 in the usersModel collection.
  const user = await usersModel.Users.findOneAndUpdate(
      { id: 123123 },
      {
        $setOnInsert: {
          id: 123123,
          first_name: 'moshe',
          last_name: 'israeli',
          birthday: new Date(1990, 1, 10),
        }
      },
      {
        timestamps: false,
        upsert: true,
        new: true
      }
  );

  // If the user was found, log their name to the console.
  if (user) {
    debug('User found: ' + user.first_name + ' ' + user.last_name);
  }
}

